defmodule PhoneyApi.Repo.Migrations.InitialSetup do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:email, :text)
      add(:username, :text)
      add(:password, :text)

      add(:created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end

    create table(:favorites, primary_key: false) do
      add(
        :user_id,
        references(:users,
          column: :id,
          name: "favorites_user_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(:contact_id, :uuid, null: false, primary_key: true)
    end

    create table(:contacts, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    alter table(:favorites) do
      modify(
        :contact_id,
        references(:contacts,
          column: :id,
          name: "favorites_contact_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    alter table(:contacts) do
      add(:fullname, :text)
      add(:phone_number, :text)
      add(:email, :text)
      add(:address, :text)

      add(:created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )

      add(:updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
      )
    end
  end

  def down do
    alter table(:contacts) do
      remove(:updated_at)
      remove(:created_at)
      remove(:address)
      remove(:email)
      remove(:phone_number)
      remove(:fullname)
    end

    drop(constraint(:favorites, "favorites_contact_id_fkey"))

    alter table(:favorites) do
      modify(:contact_id, :uuid)
    end

    drop(table(:contacts))

    drop(constraint(:favorites, "favorites_user_id_fkey"))

    drop(table(:favorites))

    drop(table(:users))
  end
end
